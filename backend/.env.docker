# Docker environment variables for backend
# Эти переменные переопределены в docker-compose.yml

# Database (будет переопределено в docker-compose.yml)
DATABASE_URL=postgresql://rp_user:rp_password@database:5432/rp_server_db

# Discord OAuth2 Configuration (ОБЯЗАТЕЛЬНО НАСТРОИТЬ!)
DISCORD_CLIENT_ID=your_discord_client_id_here
DISCORD_CLIENT_SECRET=your_discord_client_secret_here
DISCORD_REDIRECT_URI=http://localhost:8000/api/v1/auth/discord/callback
DISCORD_GUILD_ID=your_discord_server_id_here

# Discord Role Names (точно как в Discord сервере)
DISCORD_POLICE_ROLE_NAME=Полицейский
DISCORD_ADMIN_ROLE_NAME=Администратор сайта

# SP-Worlds API Configuration (ОБЯЗАТЕЛЬНО НАСТРОИТЬ!)
SPWORLDS_MAP_ID=your_map_id_here
SPWORLDS_MAP_TOKEN=your_map_token_here
SPWORLDS_API_URL=https://api.spworlds.ru

# Security (будет переопределено в docker-compose.yml)
SECRET_KEY=super-secret-production-key-change-me-please-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=1440

# Role Check Configuration
ROLE_CHECK_INTERVAL=30  # Интервал проверки ролей в минутах (0 = отключено)

# Application (будет переопределено в docker-compose.yml)
PROJECT_NAME="RP Server Backend"
VERSION="1.0.0"
DEBUG=false
ENVIRONMENT=production
FRONTEND_URL=http://localhost:3000

# Redis (для будущих улучшений)
REDIS_URL=redis://redis:6379/0

# CORS (будет переопределено в docker-compose.yml)
ALLOWED_ORIGINS=["http://localhost:3000", "http://localhost", "http://frontend"]

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json

# API settings
API_V1_STR=/api/v1
ITEMS_PER_PAGE=100
MAX_ITEMS_PER_PAGE=1000

# Rate limiting
RATE_LIMIT_PER_MINUTE=60

# File upload settings
MAX_FILE_SIZE=10485760  # 10MB
UPLOAD_DIR=uploads/

# Email settings (optional)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
EMAILS_FROM_EMAIL=noreply@rp-server.com
EMAILS_FROM_NAME=RP Server

# Monitoring
ENABLE_METRICS=true
METRICS_PORT=9090

# Backup settings
BACKUP_ENABLED=true
BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_DAYS=30