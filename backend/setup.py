#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ RP Server Backend —Å Discord –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
"""

import os
import secrets
import sys
from pathlib import Path


def generate_secret_key():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ SECRET_KEY"""
    return secrets.token_urlsafe(64)


def create_env_file():
    """–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –∏–∑ —à–∞–±–ª–æ–Ω–∞"""
    env_example = Path(".env.example")
    env_file = Path(".env")

    if not env_example.exists():
        print("‚ùå –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    if env_file.exists():
        overwrite = input("üîç –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/N): ")
        if overwrite.lower() != 'y':
            print("‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞")
            return True

    # –ß–∏—Ç–∞–µ–º —à–∞–±–ª–æ–Ω
    content = env_example.read_text()

    # –ó–∞–º–µ–Ω—è–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
    secret_key = generate_secret_key()
    content = content.replace(
        "super-secret-key-change-in-production-please-use-long-random-string",
        secret_key
    )

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
    env_file.write_text(content)
    print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω")
    return True


def collect_discord_config():
    """–°–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Discord"""
    print("\nüéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Discord OAuth2")
    print("=" * 50)

    discord_config = {}

    # Client ID
    client_id = input("Discord Client ID: ").strip()
    if not client_id:
        print("‚ùå Discord Client ID –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return None
    discord_config['DISCORD_CLIENT_ID'] = client_id

    # Client Secret
    client_secret = input("Discord Client Secret: ").strip()
    if not client_secret:
        print("‚ùå Discord Client Secret –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return None
    discord_config['DISCORD_CLIENT_SECRET'] = client_secret

    # Guild ID
    guild_id = input("Discord Guild ID (ID –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞): ").strip()
    if not guild_id:
        print("‚ùå Discord Guild ID –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return None
    discord_config['DISCORD_GUILD_ID'] = guild_id

    # Role names
    police_role = input("–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª–∏—Ü–µ–π—Å–∫–æ–≥–æ [–ü–æ–ª–∏—Ü–µ–π—Å–∫–∏–π]: ").strip()
    discord_config['DISCORD_POLICE_ROLE_NAME'] = police_role or "–ü–æ–ª–∏—Ü–µ–π—Å–∫–∏–π"

    admin_role = input("–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ [–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∞–π—Ç–∞]: ").strip()
    discord_config['DISCORD_ADMIN_ROLE_NAME'] = admin_role or "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∞–π—Ç–∞"

    # Redirect URI
    redirect_uri = input("Discord Redirect URI [http://localhost:8000/api/v1/auth/discord/callback]: ").strip()
    discord_config['DISCORD_REDIRECT_URI'] = redirect_uri or "http://localhost:8000/api/v1/auth/discord/callback"

    return discord_config


def collect_spworlds_config():
    """–°–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ SP-Worlds"""
    print("\nüåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SP-Worlds API")
    print("=" * 50)

    use_spworlds = input("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SP-Worlds –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é? (Y/n): ").strip()
    if use_spworlds.lower() == 'n':
        return {}

    spworlds_config = {}

    # Map ID
    map_id = input("SP-Worlds Map ID: ").strip()
    if map_id:
        spworlds_config['SPWORLDS_MAP_ID'] = map_id

    # Map Token
    map_token = input("SP-Worlds Map Token: ").strip()
    if map_token:
        spworlds_config['SPWORLDS_MAP_TOKEN'] = map_token

    # API URL
    api_url = input("SP-Worlds API URL [https://api.spworlds.ru]: ").strip()
    spworlds_config['SPWORLDS_API_URL'] = api_url or "https://api.spworlds.ru"

    return spworlds_config


def collect_app_config():
    """–°–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("\n‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("=" * 50)

    app_config = {}

    # Frontend URL
    frontend_url = input("Frontend URL [http://localhost:3000]: ").strip()
    app_config['FRONTEND_URL'] = frontend_url or "http://localhost:3000"

    # Role check interval
    role_interval = input("–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π –≤ –º–∏–Ω—É—Ç–∞—Ö [30]: ").strip()
    try:
        interval = int(role_interval) if role_interval else 30
        app_config['ROLE_CHECK_INTERVAL'] = str(interval)
    except ValueError:
        app_config['ROLE_CHECK_INTERVAL'] = "30"

    # Environment
    environment = input("–û–∫—Ä—É–∂–µ–Ω–∏–µ (development/production) [development]: ").strip()
    app_config['ENVIRONMENT'] = environment or "development"

    # Debug
    debug = input("–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏? (Y/n): ").strip()
    app_config['DEBUG'] = "true" if debug.lower() != 'n' else "false"

    return app_config


def update_env_file(discord_config, spworlds_config, app_config):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    env_file = Path(".env")

    if not env_file.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    content = env_file.read_text()

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    all_config = {**discord_config, **spworlds_config, **app_config}

    for key, value in all_config.items():
        # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        lines = content.split('\n')
        updated = False

        for i, line in enumerate(lines):
            if line.startswith(f"{key}="):
                lines[i] = f"{key}={value}"
                updated = True
                break

        if not updated:
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
            lines.append(f"{key}={value}")

        content = '\n'.join(lines)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    env_file.write_text(content)
    print("‚úÖ –§–∞–π–ª .env –æ–±–Ω–æ–≤–ª–µ–Ω")
    return True


def show_next_steps():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏"""
    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("=" * 50)
    print("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print()
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
    print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    print("   pip install -r requirements.txt")
    print()
    print("3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    print("   python -m alembic upgrade head")
    print()
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä:")
    print("   python -m uvicorn app.main:app --reload")
    print()
    print("5. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
    print("   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
    print("   - –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞: http://localhost:8000/health")
    print("   - Discord –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: http://localhost:8000/api/v1/auth/discord/login")
    print()
    print("üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README_DISCORD_AUTH.md")
    print()


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ RP Server Backend —Å Discord –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not Path("app").exists() or not Path("requirements.txt").exists():
        print("‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ backend!")
        sys.exit(1)

    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
    if not create_env_file():
        sys.exit(1)

    print("\nüìù –°–µ–π—á–∞—Å –º—ã –Ω–∞—Å—Ç—Ä–æ–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("üí° –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª—è –ø—É—Å—Ç—ã–º–∏ –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")

    # –°–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    discord_config = collect_discord_config()
    if not discord_config:
        print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Discord –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞!")
        sys.exit(1)

    spworlds_config = collect_spworlds_config()
    app_config = collect_app_config()

    # –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
    if not update_env_file(discord_config, spworlds_config, app_config):
        sys.exit(1)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
    show_next_steps()


if __name__ == "__main__":
    main()