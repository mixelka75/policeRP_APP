services:
  postgres:
    image: postgres:15
    container_name: landdd_postgres
    environment:
      POSTGRES_DB: rp_server_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - landdd_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d rp_server_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    container_name: landdd_backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/rp_server_db
      SECRET_KEY: your-super-secret-key-here-please-change-this-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      PROJECT_NAME: RP Server Backend
      VERSION: 1.0.0
      DEBUG: true
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin123
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
      - ./logs:/app/logs
    networks:
      - landdd_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: landdd_frontend
    depends_on:
      - backend
    environment:
      VITE_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - landdd_network

volumes:
  postgres_data:

networks:
  landdd_network:
    driver: bridge