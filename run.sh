#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ RP Server Backend"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ Docker –∫–æ–º–∞–Ω–¥—É compose
if ! docker compose version &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è. –û–±–Ω–æ–≤–∏—Ç–µ Docker –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ docker-compose –æ—Ç–¥–µ–ª—å–Ω–æ."
    exit 1
fi

# –†–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞
MODE=${1:-prod}

case $MODE in
    "dev" | "development")
        echo "üîß –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
        docker compose -f docker-compose.dev.yml up -d
        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
        echo "üîç –õ–æ–≥–∏: docker compose -f docker-compose.dev.yml logs -f"
        ;;
    "prod" | "production")
        echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞..."
        docker compose up -d
        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
        echo "üíö –°—Ç–∞—Ç—É—Å: http://localhost:8000/health"
        echo "üîç –õ–æ–≥–∏: docker compose logs -f"
        ;;
    "build")
        echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        docker compose build --no-cache
        echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã"
        ;;
    "stop")
        echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
        docker compose down
        docker compose -f docker-compose.dev.yml down
        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        ;;
    "clean")
        echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker..."
        docker compose down -v --remove-orphans
        docker system prune -f
        echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        ;;
    "logs")
        echo "üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏..."
        docker compose logs -f
        ;;
    "status")
        echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
        docker compose ps
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {dev|prod|build|stop|clean|logs|status}"
        echo "  dev    - –∑–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        echo "  prod   - –∑–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
        echo "  build  - –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        echo "  stop   - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        echo "  clean  - –æ—á–∏—Å—Ç–∫–∞ Docker"
        echo "  logs   - –ø–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "  status - —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        exit 1
        ;;
esac