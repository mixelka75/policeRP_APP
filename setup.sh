#!/bin/bash
# setup.sh - –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –†–ü –°–µ—Ä–≤–µ—Ä

set -e

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –†–ü –°–µ—Ä–≤–µ—Ä - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
echo "==========================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
if [[ $EUID -eq 0 ]]; then
   echo "‚ùå –ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ root"
   exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥
check_command() {
    if ! command -v $1 &> /dev/null; then
        echo "‚ùå $1 –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    else
        echo "‚úÖ $1 –Ω–∞–π–¥–µ–Ω: $(command -v $1)"
        return 0
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
MISSING_DEPS=""

if ! check_command "node"; then
    MISSING_DEPS="${MISSING_DEPS}node "
fi

if ! check_command "npm"; then
    MISSING_DEPS="${MISSING_DEPS}npm "
fi

if ! check_command "python3"; then
    MISSING_DEPS="${MISSING_DEPS}python3 "
fi

if ! check_command "pip3"; then
    MISSING_DEPS="${MISSING_DEPS}pip3 "
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π
if command -v node &> /dev/null; then
    NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$NODE_VERSION" -lt 18 ]; then
        echo "‚ö†Ô∏è  Node.js –≤–µ—Ä—Å–∏—è $(node --version) < 18. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å."
    fi
fi

if command -v python3 &> /dev/null; then
    PYTHON_VERSION=$(python3 --version | cut -d' ' -f2 | cut -d'.' -f1,2)
    if [ "$(echo "$PYTHON_VERSION < 3.11" | bc -l)" -eq 1 ]; then
        echo "‚ö†Ô∏è  Python –≤–µ—Ä—Å–∏—è $(python3 --version) < 3.11. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å."
    fi
fi

if [ ! -z "$MISSING_DEPS" ]; then
    echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: $MISSING_DEPS"
    echo ""
    echo "–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ Ubuntu/Debian:"
    echo "sudo apt update"
    echo "sudo apt install nodejs npm python3 python3-pip python3-venv"
    echo ""
    echo "–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ macOS:"
    echo "brew install node python3"
    echo ""
    echo "–î–ª—è Windows:"
    echo "–°–∫–∞—á–∞–π—Ç–µ Node.js —Å https://nodejs.org"
    echo "–°–∫–∞—á–∞–π—Ç–µ Python —Å https://python.org"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
echo ""
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."

if [ ! -d "backend" ]; then
    echo "‚ùå –ü–∞–ø–∫–∞ backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

if [ ! -d "frontend" ]; then
    echo "‚ùå –ü–∞–ø–∫–∞ frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

if [ ! -f "backend/requirements.txt" ]; then
    echo "‚ùå backend/requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [ ! -f "frontend/package.json" ]; then
    echo "‚ùå frontend/package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

echo "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—ç–∫–µ–Ω–¥–∞
echo ""
echo "üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—ç–∫–µ–Ω–¥–∞..."

cd backend/

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -d "venv" ]; then
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    python3 -m venv venv
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üîÑ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source venv/bin/activate

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python..."
pip install --upgrade pip
pip install -r requirements.txt

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
if [ ! -f ".env" ]; then
    echo "‚öôÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±—ç–∫–µ–Ω–¥–∞..."
    cp .env.example .env
    echo "‚úÖ –§–∞–π–ª backend/.env —Å–æ–∑–¥–∞–Ω"
else
    echo "‚úÖ –§–∞–π–ª backend/.env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É
cd ..

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo ""
echo "‚öõÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."

cd frontend/

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Node.js..."
npm install

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
if [ ! -f ".env" ]; then
    echo "‚öôÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
    cp .env.example .env
    echo "‚úÖ –§–∞–π–ª frontend/.env —Å–æ–∑–¥–∞–Ω"
else
    echo "‚úÖ –§–∞–π–ª frontend/.env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É
cd ..

# –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
echo ""
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤..."

# –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏
chmod +x setup.sh
chmod +x start.sh

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–ª–∏–Ω–∫–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
echo "#!/bin/bash" > run-backend.sh
echo "cd backend && source venv/bin/activate && python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload" >> run-backend.sh
chmod +x run-backend.sh

echo "#!/bin/bash" > run-frontend.sh
echo "cd frontend && npm run dev" >> run-frontend.sh
chmod +x run-frontend.sh

echo "#!/bin/bash" > run-both.sh
echo "echo 'üöÄ –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞ –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...'" >> run-both.sh
echo "echo '–ë—ç–∫–µ–Ω–¥ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:8000'" >> run-both.sh
echo "echo '–§—Ä–æ–Ω—Ç–µ–Ω–¥ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:3000'" >> run-both.sh
echo "echo '–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C –≤ –æ–±–æ–∏—Ö —Ç–µ—Ä–º–∏–Ω–∞–ª–∞—Ö'" >> run-both.sh
echo "echo ''" >> run-both.sh
echo "echo '–ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞ –≤ —Ñ–æ–Ω–µ...'" >> run-both.sh
echo "cd backend && source venv/bin/activate && python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload &" >> run-both.sh
echo "BACKEND_PID=\$!" >> run-both.sh
echo "sleep 3" >> run-both.sh
echo "echo '–ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...'" >> run-both.sh
echo "cd frontend && npm run dev" >> run-both.sh
echo "echo '–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—ç–∫–µ–Ω–¥–∞...'" >> run-both.sh
echo "kill \$BACKEND_PID" >> run-both.sh
chmod +x run-both.sh

echo "‚úÖ –°–∫—Ä–∏–ø—Ç—ã —Å–æ–∑–¥–∞–Ω—ã:"
echo "  - run-backend.sh  - –∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –±—ç–∫–µ–Ω–¥–∞"
echo "  - run-frontend.sh - –∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
echo "  - run-both.sh     - –∑–∞–ø—É—Å–∫ –æ–±–µ–∏—Ö —á–∞—Å—Ç–µ–π"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤..."

if command -v docker &> /dev/null; then
    echo "‚úÖ Docker –Ω–∞–π–¥–µ–Ω: $(docker --version)"

    if command -v docker-compose &> /dev/null; then
        echo "‚úÖ Docker Compose –Ω–∞–π–¥–µ–Ω: $(docker-compose --version)"
    else
        echo "‚ö†Ô∏è  Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤."
    fi
else
    echo "‚ö†Ô∏è  Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤."
fi

if command -v git &> /dev/null; then
    echo "‚úÖ Git –Ω–∞–π–¥–µ–Ω: $(git --version)"
else
    echo "‚ö†Ô∏è  Git –Ω–µ –Ω–∞–π–¥–µ–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–ª—è –≤–µ—Ä—Å–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è."
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo ""
echo "üß™ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –±—ç–∫–µ–Ω–¥ –º–æ–∂–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞..."
cd backend/
source venv/bin/activate
if python -c "from app.main import app; print('‚úÖ –ë—ç–∫–µ–Ω–¥ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ')" 2>/dev/null; then
    echo "‚úÖ –ë—ç–∫–µ–Ω–¥ –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É"
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±—ç–∫–µ–Ω–¥–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏."
fi
cd ..

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –º–æ–∂–µ—Ç —Å–æ–±—Ä–∞—Ç—å—Å—è
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
cd frontend/
if npm run build > /dev/null 2>&1; then
    echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É"
    rm -rf dist  # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–±–æ—Ä–∫—É
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏."
fi
cd ..

# –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "====================="
echo ""
echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  ./run-backend.sh   - –∑–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞"
echo "  ./run-frontend.sh  - –∑–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
echo "  ./run-both.sh      - –∑–∞–ø—É—Å–∫ –æ–±–µ–∏—Ö —á–∞—Å—Ç–µ–π"
echo "  ./start.sh dev     - –∑–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
echo "  ./start.sh build   - —Å–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
echo "  ./start.sh docker  - –∑–∞–ø—É—Å–∫ –≤ Docker"
echo ""
echo "URLs –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞:"
echo "  Frontend: http://localhost:3000"
echo "  Backend:  http://localhost:8000"
echo "  API Docs: http://localhost:8000/docs"
echo ""
echo "–õ–æ–≥–∏–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin / admin123"
echo ""
echo "–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "  ./run-both.sh"
echo ""
echo "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏:"
echo "  ./start.sh help"

# –°–æ–∑–¥–∞–Ω–∏–µ .gitignore –≤ –∫–æ—Ä–Ω–µ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".gitignore" ]; then
    echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ .gitignore..."
    cat > .gitignore << 'EOF'
# Logs
*.log
logs/

# Runtime data
*.pid
*.seed
*.pid.lock

# Environment variables
.env
.env.local
.env.production

# OS generated files
.DS_Store
.DS_Store?
._*
Thumbs.db

# IDE
.vscode/
.idea/
*.swp
*.swo

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
venv/
env/
ENV/

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
dist/
build/

# Database
*.db
*.sqlite
*.sqlite3

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Docker
docker-compose.override.yml
EOF
    echo "‚úÖ .gitignore —Å–æ–∑–¥–∞–Ω"
fi

echo ""
echo "üöÄ –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!"