#!/bin/bash
# start.sh - –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –†–ü –°–µ—Ä–≤–µ—Ä Frontend

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ –†–ü –°–µ—Ä–≤–µ—Ä Frontend"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Node.js
NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Node.js 18+. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $(node --version)"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ npm
if ! command -v npm &> /dev/null; then
    echo "‚ùå npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ npm –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi

# –†–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞
MODE=${1:-dev}

case $MODE in
    "dev" | "development")
        echo "üîß –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ node_modules
        if [ ! -d "node_modules" ]; then
            echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
            npm install
        fi

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ .env —Ñ–∞–π–ª
        if [ ! -f ".env" ]; then
            echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
            cp .env.example .env
            echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."
        fi

        echo "üåê –ó–∞–ø—É—Å–∫ dev —Å–µ—Ä–≤–µ—Ä–∞..."
        npm run dev
        ;;

    "build")
        echo "üî® –°–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞..."

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        if [ ! -d "node_modules" ]; then
            echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
            npm ci
        fi

        echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
        npm run build

        echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –§–∞–π–ª—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ dist/"
        ;;

    "preview")
        echo "üëÄ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–±–æ—Ä–∫–∏..."

        if [ ! -d "dist" ]; then
            echo "üì¶ –°–±–æ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–±–æ—Ä–∫–∞..."
            npm run build
        fi

        npm run preview
        ;;

    "install")
        echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        npm install

        if [ ! -f ".env" ]; then
            echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
            cp .env.example .env
            echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
        fi

        echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        ;;

    "docker")
        echo "üê≥ –ó–∞–ø—É—Å–∫ —Å Docker..."

        if ! command -v docker &> /dev/null; then
            echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            exit 1
        fi

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose (–Ω–æ–≤–∞—è –∏ —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏–∏)
        DOCKER_COMPOSE_CMD=""
        if command -v docker-compose &> /dev/null; then
            DOCKER_COMPOSE_CMD="docker-compose"
        elif docker compose version &> /dev/null; then
            DOCKER_COMPOSE_CMD="docker compose"
        else
            echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            exit 1
        fi

        echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        $DOCKER_COMPOSE_CMD up -d

        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ Docker"
        echo "üåê Frontend: http://localhost:3000"
        echo "üîß Backend: http://localhost:8000"
        ;;

    "stop")
        echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É Docker Compose
        DOCKER_COMPOSE_CMD=""
        if command -v docker-compose &> /dev/null; then
            DOCKER_COMPOSE_CMD="docker-compose"
        elif docker compose version &> /dev/null; then
            DOCKER_COMPOSE_CMD="docker compose"
        else
            echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω"
            exit 1
        fi

        $DOCKER_COMPOSE_CMD down
        echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        ;;

    "clean")
        echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
        rm -rf node_modules dist .next
        echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        ;;

    "lint")
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞..."
        npm run lint
        ;;

    "type-check")
        echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ TypeScript..."
        npx tsc --noEmit
        ;;

    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {dev|build|preview|install|docker|stop|clean|lint|type-check}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  dev        - –∑–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        echo "  build      - —Å–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
        echo "  preview    - –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–±–æ—Ä–∫–∏"
        echo "  install    - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        echo "  docker     - –∑–∞–ø—É—Å–∫ —Å Docker"
        echo "  stop       - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        echo "  clean      - –æ—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤"
        echo "  lint       - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞"
        echo "  type-check - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  $0 dev     # –∑–∞–ø—É—Å–∫ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        echo "  $0 build   # —Å–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
        echo "  $0 docker  # –∑–∞–ø—É—Å–∫ —Å Docker"
        exit 1
        ;;
esac